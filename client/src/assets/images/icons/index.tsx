/* AUTO-GENERATED by scripts/gen-icons.mjs — DO NOT EDIT */
import * as React from 'react';

/** 공통 props 타입 (원하면 strokeWidth/size 등 추가하세요) */
export type IconProps = React.SVGProps<SVGSVGElement>;

/** 내부에서 lazy import된 컴포넌트를 Suspense로 감싸는 헬퍼 */
function withSuspense<T extends React.ComponentType<any>>(LazyComp: T) {
  const Wrapped = (props: React.ComponentProps<T>) => (
    <React.Suspense fallback={null}>
      <LazyComp {...props} />
    </React.Suspense>
  );
  return Wrapped;
}
const Lazy_Add = React.lazy(() => import('./add.svg?react'));
const Lazy_Admin = React.lazy(() => import('./admin.svg?react'));
const Lazy_Alarm = React.lazy(() => import('./alarm.svg?react'));
const Lazy_Calendar = React.lazy(() => import('./calendar.svg?react'));
const Lazy_Check = React.lazy(() => import('./check.svg?react'));
const Lazy_CircleX = React.lazy(() => import('./circle_x.svg?react'));
const Lazy_Close = React.lazy(() => import('./close.svg?react'));
const Lazy_Dashboard = React.lazy(() => import('./dashboard.svg?react'));
const Lazy_Delete = React.lazy(() => import('./delete.svg?react'));
const Lazy_Download = React.lazy(() => import('./download.svg?react'));
const Lazy_DownArr = React.lazy(() => import('./down_arr.svg?react'));
const Lazy_Edit = React.lazy(() => import('./edit.svg?react'));
const Lazy_Emoji = React.lazy(() => import('./emoji.svg?react'));
const Lazy_Enter = React.lazy(() => import('./enter.svg?react'));
const Lazy_Expense = React.lazy(() => import('./expense.svg?react'));
const Lazy_File = React.lazy(() => import('./file.svg?react'));
const Lazy_FilterOff = React.lazy(() => import('./filter_off.svg?react'));
const Lazy_FilterOn = React.lazy(() => import('./filter_on.svg?react'));
const Lazy_Heart = React.lazy(() => import('./heart.svg?react'));
const Lazy_HeartFull = React.lazy(() => import('./heart_full.svg?react'));
const Lazy_LeftArr = React.lazy(() => import('./left_arr.svg?react'));
const Lazy_Logout = React.lazy(() => import('./logout.svg?react'));
const Lazy_MailMin = React.lazy(() => import('./mail_min.svg?react'));
const Lazy_Manager = React.lazy(() => import('./manager.svg?react'));
const Lazy_More = React.lazy(() => import('./more.svg?react'));
const Lazy_Office = React.lazy(() => import('./office.svg?react'));
const Lazy_PhoneMin = React.lazy(() => import('./phone_min.svg?react'));
const Lazy_Pin = React.lazy(() => import('./pin.svg?react'));
const Lazy_Place = React.lazy(() => import('./place.svg?react'));
const Lazy_PlaceMin = React.lazy(() => import('./place_min.svg?react'));
const Lazy_Plus = React.lazy(() => import('./plus.svg?react'));
const Lazy_Profile = React.lazy(() => import('./profile.svg?react'));
const Lazy_Project = React.lazy(() => import('./project.svg?react'));
const Lazy_Pto = React.lazy(() => import('./pto.svg?react'));
const Lazy_RightArr = React.lazy(() => import('./right_arr.svg?react'));
const Lazy_SearchGray = React.lazy(() => import('./search_gray.svg?react'));
const Lazy_Send = React.lazy(() => import('./send.svg?react'));
const Lazy_TooltipNoti = React.lazy(() => import('./tooltip_noti.svg?react'));
const Lazy_Upload = React.lazy(() => import('./upload.svg?react'));
const Lazy_UpArr = React.lazy(() => import('./up_arr.svg?react'));
const Lazy_ViewGrid = React.lazy(() => import('./view_grid.svg?react'));
const Lazy_ViewList = React.lazy(() => import('./view_list.svg?react'));
const Lazy_Zoom = React.lazy(() => import('./zoom.svg?react'));

export const Add: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Add), { displayName: 'Add' });
export const Admin: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Admin), { displayName: 'Admin' });
export const Alarm: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Alarm), { displayName: 'Alarm' });
export const Calendar: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Calendar), { displayName: 'Calendar' });
export const Check: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Check), { displayName: 'Check' });
export const CircleX: React.FC<IconProps> = Object.assign(withSuspense(Lazy_CircleX), { displayName: 'CircleX' });
export const Close: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Close), { displayName: 'Close' });
export const Dashboard: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Dashboard), { displayName: 'Dashboard' });
export const Delete: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Delete), { displayName: 'Delete' });
export const Download: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Download), { displayName: 'Download' });
export const DownArr: React.FC<IconProps> = Object.assign(withSuspense(Lazy_DownArr), { displayName: 'DownArr' });
export const Edit: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Edit), { displayName: 'Edit' });
export const Emoji: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Emoji), { displayName: 'Emoji' });
export const Enter: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Enter), { displayName: 'Enter' });
export const Expense: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Expense), { displayName: 'Expense' });
export const File: React.FC<IconProps> = Object.assign(withSuspense(Lazy_File), { displayName: 'File' });
export const FilterOff: React.FC<IconProps> = Object.assign(withSuspense(Lazy_FilterOff), { displayName: 'FilterOff' });
export const FilterOn: React.FC<IconProps> = Object.assign(withSuspense(Lazy_FilterOn), { displayName: 'FilterOn' });
export const Heart: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Heart), { displayName: 'Heart' });
export const HeartFull: React.FC<IconProps> = Object.assign(withSuspense(Lazy_HeartFull), { displayName: 'HeartFull' });
export const LeftArr: React.FC<IconProps> = Object.assign(withSuspense(Lazy_LeftArr), { displayName: 'LeftArr' });
export const Logout: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Logout), { displayName: 'Logout' });
export const MailMin: React.FC<IconProps> = Object.assign(withSuspense(Lazy_MailMin), { displayName: 'MailMin' });
export const Manager: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Manager), { displayName: 'Manager' });
export const More: React.FC<IconProps> = Object.assign(withSuspense(Lazy_More), { displayName: 'More' });
export const Office: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Office), { displayName: 'Office' });
export const PhoneMin: React.FC<IconProps> = Object.assign(withSuspense(Lazy_PhoneMin), { displayName: 'PhoneMin' });
export const Pin: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Pin), { displayName: 'Pin' });
export const Place: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Place), { displayName: 'Place' });
export const PlaceMin: React.FC<IconProps> = Object.assign(withSuspense(Lazy_PlaceMin), { displayName: 'PlaceMin' });
export const Plus: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Plus), { displayName: 'Plus' });
export const Profile: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Profile), { displayName: 'Profile' });
export const Project: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Project), { displayName: 'Project' });
export const Pto: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Pto), { displayName: 'Pto' });
export const RightArr: React.FC<IconProps> = Object.assign(withSuspense(Lazy_RightArr), { displayName: 'RightArr' });
export const SearchGray: React.FC<IconProps> = Object.assign(withSuspense(Lazy_SearchGray), { displayName: 'SearchGray' });
export const Send: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Send), { displayName: 'Send' });
export const TooltipNoti: React.FC<IconProps> = Object.assign(withSuspense(Lazy_TooltipNoti), { displayName: 'TooltipNoti' });
export const Upload: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Upload), { displayName: 'Upload' });
export const UpArr: React.FC<IconProps> = Object.assign(withSuspense(Lazy_UpArr), { displayName: 'UpArr' });
export const ViewGrid: React.FC<IconProps> = Object.assign(withSuspense(Lazy_ViewGrid), { displayName: 'ViewGrid' });
export const ViewList: React.FC<IconProps> = Object.assign(withSuspense(Lazy_ViewList), { displayName: 'ViewList' });
export const Zoom: React.FC<IconProps> = Object.assign(withSuspense(Lazy_Zoom), { displayName: 'Zoom' });
